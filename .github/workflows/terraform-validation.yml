name: Terraform Validation

on:
  pull_request:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '.github/workflows/terraform-validation.yml'
  push:
    branches: [ main ]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '.github/workflows/terraform-validation.yml'

env:
  TF_VERSION: '1.5.0'

jobs:
  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Format Check
      id: fmt
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Terraform Plan (Dry Run)
      id: plan
      run: terraform plan -input=false -no-color
      continue-on-error: true
      env:
        AWS_ACCESS_KEY_ID: fake
        AWS_SECRET_ACCESS_KEY: fake
        AWS_DEFAULT_REGION: us-east-1

    - name: Comment PR - Success
      if: github.event_name == 'pull_request' && steps.fmt.outcome == 'success' && steps.validate.outcome == 'success'
      uses: actions/github-script@v7
      with:
        script: |
          const output = `
          ## Terraform Validation Results ‚úÖ

          #### Format Check üñåÔ∏è\`${{ steps.fmt.outcome }}\`
          #### Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`  
          #### Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`terraform
          ${{ steps.plan.outputs.stdout }}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Comment PR - Failure
      if: github.event_name == 'pull_request' && (steps.fmt.outcome == 'failure' || steps.validate.outcome == 'failure')
      uses: actions/github-script@v7
      with:
        script: |
          const output = `
          ## Terraform Validation Results ‚ùå

          #### Format Check üñåÔ∏è\`${{ steps.fmt.outcome }}\`
          #### Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`  
          #### Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Validation Errors</summary>

          \`\`\`
          ${{ steps.validate.outputs.stderr }}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Fail job if validation fails
      if: steps.fmt.outcome == 'failure' || steps.validate.outcome == 'failure'
      run: exit 1

  example-validate:
    name: Example Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Validate Basic Example
      working-directory: ./examples/basic
      run: |
        terraform init
        terraform validate
        terraform plan -input=false -no-color
      env:
        AWS_ACCESS_KEY_ID: fake
        AWS_SECRET_ACCESS_KEY: fake
        AWS_DEFAULT_REGION: us-east-1

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        soft_fail: true